<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-02-21T12:17:52+05:30</updated><id>http://localhost:4000/feed.xml</id><title type="html">Shreyas M M</title><subtitle>My Everyday Discoveries</subtitle><author><name>Shreyas M M</name></author><entry><title type="html">Tomcat Log Rotation, Compression, Encryption (GDPR Compliance) and Copy to AWS S3</title><link href="http://localhost:4000/tomcat-log-rotation-compression-encryption-gdpr-compliance-and-copy-to-aws-s3" rel="alternate" type="text/html" title="Tomcat Log Rotation, Compression, Encryption (GDPR Compliance) and Copy to AWS S3" /><published>2018-09-26T16:32:06+05:30</published><updated>2018-09-26T16:32:06+05:30</updated><id>http://localhost:4000/tomcat-log-rotation-compression-encryption-gdpr-compliance-and-copy-to-aws-s3</id><content type="html" xml:base="http://localhost:4000/tomcat-log-rotation-compression-encryption-gdpr-compliance-and-copy-to-aws-s3">![Tomcat Log Rotation](/assets/images/tomcat-log-rotation.jpg)

In production environment the logs of applications are important, we need to store them for compliance reasons and make sure that the log files dont fill up the disk space. Since the EU GDPR Privacy law has been passed, the log files need to be encrypted.

In Linux we have a beautiful log management utility logrotate, which is run regularly to rotate the logs files of apt, dpkg, cups-daemon, rsyslog, ufw etc. configuration of these logs are found in `/etc/logrotate.d`

I am running Tomcat 9 and CATALINA_HOME=/opt/tomcat. You can install Tomcat 9 from [here](/). Tomcat rotates the logs by itself in a default setup. which is configured in `/opt/tomcat/conf/logging.properties` file. we need explicitly configure tomcat to not to rotate the log files like catalina.out itself, since we will be rotating and compressing them using system logrotate utility.

Add this lines to `/opt/tomcat/conf/logging.properties`

{% gist f2579a891905442906167c7d77a99198 %}

I have added one line to each log entry `org.apache.juli.AsyncFileHandler.rotatable = false` to stop rotation of logs by tomcat, Once this is done tomcat will not rotate the logs by itself.

#### Logrotate and Compression

create a new file at `/etc/logrotate.d/tomcat`

{% gist ec043a956c9d56580217f4824392ffc3 %}

`compress` – compress the log files
`compresscmd` – command used for Compression, gzip
`compressoptions` – options for compression command, Gzip Compression level 1-9
`compressext` – extention of compressed file

its just going to do `gzip -9 filename` , which compresses the file.

`dateext`
`dateformat -%Y-%m-%d-%s`
these lines add date extention to the rotated log file in the format `catalina.out-2018-09-21-1537501441`

`nomail` tells not mail the log files

`copytruncate` – copies the log file to new file and truncates the log file to zero bytes.

`daily` – rotates the log file daily

`rotate 10` – keep the 10 past rotated logs

`notifempty` – do not rotate the log if it is empty

`missingok` – if the file is missing its ok

`create 0644 tomcat tomcat` – create the log file with these permissions, ignored if copy truncate is used.

`postrotate` – command to run after the log rotation.

Here we are running the a custom Bash command to encrypt and move the log files to AWS S3

#### Encryption and Copying to AWS S3

Create a Bash Shell Script `vim /usr/share/encrypt`

{% gist 64dac1afc1274878e1aa9a3ce1fac6ef %}

Give it execute permissions

```shell
chmod +x /usr/share/encrypt
```

This script will encrypt the file with .gz which are compressed files and accept the two arguments location of gz files and Encryption key

```shell
encrypt /opt/tomcat/log /data/key
```

Key is needed to encrypt and decrypt the file

```shell
cat /data/key
Big3secret
```

Encrypt command will get list of files in given location and if the file has .gz extention the it will encrypt it with gpg (GNU Privacy Guard), move all the encrypted files which has .gpg extention to aws s3 bucket and once uploaded it will delete the encrypted file from that location. For copying the encrypted logs to S3 make sure that the ec2 instance has write to S3 IAM Access Role assigned to it.

For Decryption of files

```shell
gpg --batch --passphrase-file /data/mykey -d catalina.out-2018-09-21-1537501441.gz.gpg &gt; catalina.out-2018-09-21-1537501441.gz
```</content><author><name>Shreyas M M</name></author><category term="cloud" /><category term="gdpr" /><category term="linux" /><category term="logrotation" /><category term="tomcat" /><summary type="html"></summary></entry><entry><title type="html">How to Install Tomcat</title><link href="http://localhost:4000/how-to-install-tomcat" rel="alternate" type="text/html" title="How to Install Tomcat" /><published>2018-09-25T16:32:06+05:30</published><updated>2018-09-25T16:32:06+05:30</updated><id>http://localhost:4000/how-to-install-tomcat</id><content type="html" xml:base="http://localhost:4000/how-to-install-tomcat">![How to Install Tomcat](/assets/images/install-tomcat.jpg)

Tomcat is web server and servlet container which is used to run java applications, i will be showing the steps to install tomcat and java in an production system. i will be installing Tomcat 9 and OpenJDK 1.8 (Java 8). Most Steps are common for Redhat and Debian based systems.

#### Java 8 Installation

For Redhat based Distribution

```shell
yum install java-1.8.0-openjdk.x86_64 java-1.8.0-openjdk-devel.x86_64
```

For Debian and Ubuntu based Distribution

```shell
sudo apt install openjdk-8-jdk
```

Get the Java Installed Version

```shell
java -version
openjdk version &quot;1.8.0_181&quot;
OpenJDK Runtime Environment (build 1.8.0_181-b13)
OpenJDK 64-Bit Server VM (build 25.181-b13, mixed mode)
```

We need to set JAVA_HOME environment variable so run and get the JAVA_HOME Path

```shell
sudo update-alternatives --config java
```

Edit file `vim /etc/environment` add JAVA_HOME environment variable

```shell
JAVA_HOME=&quot;/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.111-1.b15.el7_2.x86_64/jre&quot;
```

Logout and Login, run `env`, Check for JAVA_HOME in the output.

#### Tomcat 9 Installation

Create a tomcat group

```shell
groupadd tomcat
```

Create a tomcat user with /opt/tomcat as its home directory

```shell
mkdir -p /opt/tomcat
useradd -s /bin/false -g tomcat -d /opt/tomcat tomcat
```

Change working directory and download the latest tomcat from [tomcat website](https://tomcat.apache.org)

```shell
cd /opt
wget http://mirrors.wuchna.com/apachemirror/tomcat/tomcat-9/v9.0.12/bin/apache-tomcat-9.0.12.tar.gz
```

Extract the Tomcat archive

```shell
tar -xzvf apache-tomcat-9.0.12.tar.gz
```

Move Contents to `/opt/tomcat`

```shell
mv apache-tomcat/* /opt/tomcat
```

Change ownership and user to tomcat

```shell
chown -R tomcat:tomcat /opt/tomcat
```

Create Systemd Service for Tomcat Service

```shell
vim /etc/systemd/system/tomcat.service
```

{% gist a3b4986605aa6c2a0b930ac11ada8ae0 %}

Reload systemd manager configuration.

```shell
systemctl daemon-reload
```

Start Tomcat Process.

```shell
systemctl start tomcat
```

Enable Tomcat to Start at System Boot.

```shell
systemctl enable tomcat
```

Run `netstat -plntu` and check port 8080 is in LISTEN State by a java program. Now open `http://server-ip-addres:8080` you should see tomcat homepage

Configure Tomcat Manager Users

{% gist 8654a629ec28798e944cf36eff9985c5 %}

Restart Tomcat Process.

```shell
systemctl restart tomcat
```

Make sure all the Files in `/opt/tomcat` belong to Tomcat user and group, Run this Command whenever you new deploy WAR in `/opt/tomcat/webapps`

```shell
chown -R tomcat:tomcat /opt/tomcat
```</content><author><name>Shreyas M M</name></author><category term="cloud" /><category term="linux" /><category term="tomcat" /><summary type="html"></summary></entry><entry><title type="html">How to Install Nodejs on Ubuntu</title><link href="http://localhost:4000/install-nodejs-ubuntu" rel="alternate" type="text/html" title="How to Install Nodejs on Ubuntu" /><published>2017-03-19T16:32:06+05:30</published><updated>2017-03-19T16:32:06+05:30</updated><id>http://localhost:4000/install-nodejs-ubuntu</id><content type="html" xml:base="http://localhost:4000/install-nodejs-ubuntu">![How to Install Nodejs on Ubuntu](/assets/images/how-to-install-nodejs.jpg){:class=&quot;.center&quot;}

Today I am going to show How to install [nodejs] on your ubuntu machine of any version, you can install multiple versions of nodejs at same time using nvm.

#### [NVM – Node Version Manager](https://github.com/creationix/nvm)

nvm is to node what rbenv is to ruby, nvm helps us to use multiple versions of node on project level and over all system wide level, We will be using nvm to install because ubuntu does not have latest version of node. This is the easiest method of all and to stay updated on latest release of node, lets install nvm

```shell
git clone https://github.com/creationix/nvm.git .nvm
```

Now we need to source the nvm directory and nvm.sh to the shell, Add below lines to your `~/.bashrc`, `~/.profile`, or `~/.zshrc` based on the shell you use, so that the command will be available on you login

```shell
export NVM_DIR=&quot;$HOME/.nvm&quot;
[ -s &quot;$NVM_DIR/nvm.sh&quot; ] &amp;&amp; . &quot;$NVM_DIR/nvm.sh&quot;
```

Now get the list of available versions of nodejs

```shell
nvm ls-remote
```

Based on your requirement, install the node version i will go for LTS version

```shell
nvm install v6.10.0
```

Set this version as default

```shell
nvm alias default v6.10.0
```

Now Nodejs is installed

```shell
node --version
```

You also have access to npm (Node Package Manager) you can get many node packages with single command lets check its version

```shell
npm --version
```

Now suppose any of your project depends on older version of node then run this in specific project directory

```shell
echo &quot;4.8.0&quot; &gt; .nvmrc
nvm use
```

[nodejs]: https://nodejs.org</content><author><name>Shreyas M M</name></author><category term="nodejs" /><category term="nvm" /><summary type="html"></summary></entry><entry><title type="html">I Just Cleared RHCE</title><link href="http://localhost:4000/i-just-cleared-rhce" rel="alternate" type="text/html" title="I Just Cleared RHCE" /><published>2016-09-12T16:32:06+05:30</published><updated>2016-09-12T16:32:06+05:30</updated><id>http://localhost:4000/i-just-cleared-rhce</id><content type="html" xml:base="http://localhost:4000/i-just-cleared-rhce">![RHCE Logo](/assets/images/rhce.jpg){:class=&quot;.center&quot;}

After Two months preparation i finally cleared RHCE, on 27 Aug 2016 i received a mail saying congratulation on earning RHCE. the whole week was bliss, well i had cleared RHCSA with 300/300, RHCE with 271/300. I have done my RHCE on Red Hat Enterprise Linux 7.

RHCSA is very easy it involves many basic Linux things RHCE is more advanced you can get more details on exams &amp; course contents [RHCSA](https://www.redhat.com/en/services/certification/rhcsa) and [RHCE](https://www.redhat.com/en/services/certification/rhce)

#### Some tips on how to clear the RHCE

1. Time management is very important and crucial when concentrating on RHCE.
2. Even though you may know how to solve the question if you take more time in solving that problem its not worth you would have wasted more time in it instead you would have solved more small questions in it.
3. Rather than working in GUI try working more in terminal you will definitely save time and use ssh when you want to execute on commands on systems.
4. When practising keep note of time, you are taking to solve the problem this will help you a lot and give you a confidence exam is of 3 and half hours , you may get last half an hour for solving.
5. When preparing i used books provided by redhat concentrate on concepts and solve the examples given in the books.
6. Everything is in man pages, examples on important things like teaming,etc are provided in the man pages you can easily get reference from there for faster execution
7. If you got struck in any question leave it go for next at the end when you have time try solving it, don’t take more than 10 mins solving a question
8. Enable all the required firewall ports once, install all the packages at once in the beginning, you will definitely save a huge amount of time in this
9. Restart after every entry in /etc/fstab to check you have done correctly. At the end don’t forget to restart you systems.
10. Write down important things in the paper provided to you in exam it will save time when working &amp; checking.

**Important**  
Practice as much as Possible
Remember when you are practising, follow this approach – Try solving the problems with less time, Execute the problems with minimising time.</content><author><name>Shreyas M M</name></author><category term="rhce" /><summary type="html"></summary></entry><entry><title type="html">Setup Virtualbox for Local Development Environment</title><link href="http://localhost:4000/setup-virtualbox-for-local-development-environment" rel="alternate" type="text/html" title="Setup Virtualbox for Local Development Environment" /><published>2016-06-07T16:32:06+05:30</published><updated>2016-06-07T16:32:06+05:30</updated><id>http://localhost:4000/setup-virtualbox-for-local-development-environment</id><content type="html" xml:base="http://localhost:4000/setup-virtualbox-for-local-development-environment">![Setup Virtualbox for Local Development Environment](/assets/images/virtualbox.jpg)

Hi Today i am going show you how to setup virtualbox for local Development which will be useful when you are developing / deploying application inside the virtual machine and want to interact with it outside the virtual machine or from host machine,this is also helpful when you are developing for openstack you have installed openstack in vm and want to interact and test the api from host machine, before starting download &amp; install [Virtualbox](https://www.virtualbox.org).

Watch Video Tutorial Over Here

{% youtube &quot;https://www.youtube.com/watch?v=qIxnx21sUDk&quot; %}

### Create Host only network adapter

Click on File -&gt; Preference
![Create Host only network adapter 1](/assets/images/virtualbox1.png)

Choose Network, Click Host-only Networks and click on plus sign
![Create Host only network adapter 2](/assets/images/virtualbox2.png)

Click on Settings button of vboxnet0
![Create Host only network adapter 3](/assets/images/virtualbox3.png)

Under Adapter Tab
![Create Host only network adapter 4](/assets/images/virtualbox4.png)

```shell
IPv4 Address 192.168.56.1
IPv4 Network Mask 255.255.255.0
```

Under DHCP Server Tab
![Create Host only network adapter 5](/assets/images/virtualbox5.png)  
Check mark the “Enable Server option”

```shell
Server Address 192.168.56.2
Server Mask 255.255.255.0
Lower Address Bound 192.168.56.3
Upper Address Bound 192.168.56.240
```

#### Add Host only adapter to virtual machine as Network Adapter 2

Right Click on the vm and click on settings
![Create Host only network adapter 6](/assets/images/virtualbox6.png)

Choose Network , Under Adapter 2  
Check Enable Network Adapter  
Attached to: Host-only Adapter  
Name: vboxnet0
![Create Host only network adapter 7](/assets/images/virtualbox7.png)

Then boot the vm and run `sudo vim /etc/network/interfaces`
Add These two lines at end

```shell
auto enp0s8
iface enp0s8 inet dhcp
```

Save the file and reboot the vm

Full Contents of `/etc/network/interfaces` file

```shell
# The loopback network interface
auto lo
iface lo inet loopback

# The primary network interface
auto enp0s3
iface enp0s3 inet dhcp

auto enp0s8
iface enp0s8 inet dhcp
```

Once the vm is booted find the ip address given by hostonly adapter by running `ip a` of `enp0s8`  interface. Once you get that ip address you can ping, ssh, ftp or if you are running a webserver in vm you can access it from host machine. From your host machine run `ping [ip address of vm]`, install webserver on vm open it on host machine.</content><author><name>Shreyas M M</name></author><category term="development-environment" /><category term="openstack" /><category term="virtualbox" /><summary type="html"></summary></entry><entry><title type="html">Install Django on Ubuntu</title><link href="http://localhost:4000/install-django-on-ubuntu" rel="alternate" type="text/html" title="Install Django on Ubuntu" /><published>2016-03-09T16:32:06+05:30</published><updated>2016-03-09T16:32:06+05:30</updated><id>http://localhost:4000/install-django-on-ubuntu</id><content type="html" xml:base="http://localhost:4000/install-django-on-ubuntu">![Installing Django on Ubuntu](/assets/images/installing-django-on-ubuntu.jpg)

Today i am going to show how to setup or install [Django](https://www.djangoproject.com) environment on Ubuntu. I will be concentrating only on python 3 version. Django is web application framework written in python, It Uses MVT (Models, Views, Templates) Concept .

We will be installing django in an isolated environment but why? simple because we do not want django packages to mess with os python libraries, we will be using pip to install packages and virtualenv to create virtual environments.pip is a package management system used to install and manage software packages written in Python. Now open your terminal and follow this commands

Install python3 Pip

```shell
sudo apt-get install python3-pip
```

Install Virtualenv

```shell
sudo pip3 install virtualenv
```

Create new directory for your project

```shell
mkdir -p Code/Django/myapp
cd Code/Django/myapp
```

Create new Virtual Environment we will call it py3

```shell
virtualenv py3
```

Once you run above command new directory py3 will be created. Now We need to activate our new py3 environment

```shell
source py3/bin/activate
```

your prompt will be changed to `(py3) Code/Django/myapp`

Now Install Django. Notice we are not running pip3 command, we will just  run pip inside virtualenv

```shell
pip install django
```

Once Django is installed, you can check the version by

```shell
django-admin --version
1.9.2
```

Lets start new project call makeinindia

```shell
django-admin startproject makeinindia
cd makeinindia
```

Lets start new app blog

```shell
python manage.py startapp blog
```

Now we will start the server

```shell
python manage.py runserver
```

Finally done, Whenever you want to leave the virtual environment just run to `deactivate`

Dont forget  to run this command Every time you want to work with your Django app

```shell
cd Code/Django/myapp
source py3/bin/activate
```</content><author><name>Shreyas M M</name></author><category term="django" /><category term="ubuntu" /><summary type="html"></summary></entry><entry><title type="html">Device Drivers in Linux</title><link href="http://localhost:4000/device-drivers-linux" rel="alternate" type="text/html" title="Device Drivers in Linux" /><published>2015-12-10T16:32:06+05:30</published><updated>2015-12-10T16:32:06+05:30</updated><id>http://localhost:4000/device-drivers-linux</id><content type="html" xml:base="http://localhost:4000/device-drivers-linux">![Device Drivers in Linux](/assets/images/device-drivers.jpg){:class=&quot;.center&quot;}

This is my Advance Operating System Assignment. I will show how to Compile Linux Kernel from Source,You can download Linux Kernel From [Here](https://www.kernel.org).

https://www.slideshare.net/MMShreyas/device-drivers-in-linux

I also show how Device Drivers are implemented as Kernel modules, What is Purpose of Udev, How you can Manually load and unload Kernel modules at Run time.</content><author><name>Shreyas M M</name></author><category term="linux" /><category term="presentations" /><summary type="html"></summary></entry><entry><title type="html">Containers and Cloud: From LXC to Docker to Kubernetes</title><link href="http://localhost:4000/containers-cloud-lxc-docker-kubernetes" rel="alternate" type="text/html" title="Containers and Cloud: From LXC to Docker to Kubernetes" /><published>2015-12-05T16:32:06+05:30</published><updated>2015-12-05T16:32:06+05:30</updated><id>http://localhost:4000/containers-cloud-lxc-docker-kubernetes</id><content type="html" xml:base="http://localhost:4000/containers-cloud-lxc-docker-kubernetes">![Containers and Cloud: From LXC to Docker to Kubernetes](/assets/images/containers-cloud-lxc-docker-kubernetes.jpg){:class=&quot;.center&quot;}

Well this is December a month full of Exams, Assignments, Seminars.This is my Seminar Topic Containers and Cloud: From LXC to Docker to Kubernetes, it speaks about how present Cloud system is moving from Hypervisors to Docker &amp; Kubernetes.

https://www.slideshare.net/MMShreyas/containers-and-cloud-from-lxc-to-docker-to-kubernetes</content><author><name>Shreyas M M</name></author><category term="cloud" /><category term="docker" /><summary type="html"></summary></entry><entry><title type="html">AVL Trees Implementation in Python</title><link href="http://localhost:4000/avl-trees-implementation-in-python" rel="alternate" type="text/html" title="AVL Trees Implementation in Python" /><published>2015-11-16T16:32:06+05:30</published><updated>2015-11-16T16:32:06+05:30</updated><id>http://localhost:4000/avl-trees-implementation-in-python</id><content type="html" xml:base="http://localhost:4000/avl-trees-implementation-in-python">![AVL Trees Implementation in Python](/assets/images/py-avl.jpg)

I had an Assignment Recently in Advance Data Structures Course to implement AVL Trees. So Here is the source code for it. I am not going to explain what AVL Trees is, since there are many better tutorials out there.
Download from Here or Clone the GitHub Repository enter below command

```shell
git clone https://github.com/shreyasmm/AVL-Trees
```

You need to have python installed in your windows system, Linux Systems will have by default
its better to have a IDE for editing python code like PyCharms (Optional)
Execute Command in Terminal

```shell
python avl.py
```

Output
![AVL Trees Output 1](/assets/images/py-avl-output1.jpg)
![AVL Trees Output 2](/assets/images/py-avl-output2.jpg)</content><author><name>Shreyas M M</name></author><category term="avl-trees" /><category term="python" /><summary type="html"></summary></entry><entry><title type="html">Create a Ramdisk in Ubuntu Linux</title><link href="http://localhost:4000/create-a-ramdisk-in-ubuntu-linux" rel="alternate" type="text/html" title="Create a Ramdisk in Ubuntu Linux" /><published>2015-10-22T16:32:06+05:30</published><updated>2015-10-22T16:32:06+05:30</updated><id>http://localhost:4000/create-a-ramdisk-in-ubuntu-linux</id><content type="html" xml:base="http://localhost:4000/create-a-ramdisk-in-ubuntu-linux">![Create a Ramdisk in Ubuntu Linux](/assets/images/ram-disk-in-ubuntu.jpg){:class=&quot;.center&quot;}

Today i am going to show you how to create a ramdisk in Ubuntu, but the same applies for other Linux Distributions also. Before going to point i want to make clear why you need ramdisk in first place.

ramdisk is useful in many places like if you are watching an HD movie from harddisk. The disk always keeps up spinning, which may reduce the life of the hard disk, other place is in software applications, if you move ide like Android Studio or Intellij IDEA to ramdisk they offer more performance

In order to get full performance you need to have more ram like 8 GB. its not like if you have less ram you cannot create ramdisk, you can create but you cannot load big files to ram.

Create a directory first

```shell
mkdir -p /home/shrey/Others/Ramdisk
```

we use mount command -t specifies type is tmpfs is temporary filesystem source is tmpfs destination is my home directory and the size is 2GB.

```shell
sudo mount -t tmpfs tmpfs /home/shrey/Others/Ramdisk -o size=2048m
```

Note the destination directory should be created first then run this command, Ramdisk are volatile after you shutdown the data will be lost, so be careful do not copy original files to disk as they will lost after shutdown, crash, reboot.

To easily use this command we create an alias

```shell
alias ramdisk=&quot;sudo mount -t tmpfs tmpfs /home/shrey/Others/Ramdisk -o size=2048m&quot;
```

paste this in your .bashrc or .zshrc or .alias file. Restart the terminal and run ramdisk command, ramdisk will be created. Go the destination directory copy a movie file over there mine is in `/home/shrey/Others/Ramdisk` play the movie from there. You can see the movie is loaded from ram so it will be faster. and no hard disk is used here to play the movie.

If you want ramdisk to be created at every startup or reboot edit `vim /etc/fstab` Add bellow line at the end of the file.

```shell
tmpfs /home/shrey/Others/Ramdisk tmpfs rw,size=2048M 0 0
```

Now you don need to run the command ramdisk every time.

I mostly use ram disk for watching movies for 2+ hours best use of ramdisk is loading the static files like html, js, fonts &amp; images in ramdisk it could increase the server response time and disk performance of web server .

For ease of access in Ubuntu Desktop open the folder Ramdisk in Files app or Nautilus in menu Bookmarks -&gt; Bookmark this Location you will get the directory in left sidebar.</content><author><name>Shreyas M M</name></author><category term="ubuntu" /><summary type="html"></summary></entry></feed>